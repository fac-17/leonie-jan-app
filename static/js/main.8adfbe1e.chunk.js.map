{"version":3,"sources":["components/LandingPage.js","utils/fetchPlayer.js","utils/fetchFollowers.js","components/ScoreDisplay.js","components/Player.js","components/Follower.js","utils/animateFollower.js","components/PlayingField.js","components/GamePage.js","components/FinalPage.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","name","setName","githubObject","setPage","setGithubObject","React","useState","input","setInput","className","onSubmit","event","preventDefault","htmlFor","id","type","value","onChange","target","placeholder","src","avatar_url","alt","onClick","fetchPlayer","URL","fetch","then","result","json","url","ScoreDisplay","score","Player","coords","style","transform","Follower","follower","dangerous","x","y","img","areCirclesIntersecting","c1","c2","radius","Math","sqrt","pow","animateFollower","width","height","mobSize","collision","dx","dy","timer","visible","rest","playerCoords","PlayingField","followersData","setScore","setKiller","followers","setFollowers","setCoords","randomInt","max","floor","random","useEffect","interval","keyHandler","key","c","changed","min","map","window","addEventListener","i","login","setInterval","animatedFollower","console","log","removeEventListener","clearInterval","filter","GamePage","FinalPage","killer","hs","JSON","parse","localStorage","getItem","push","setItem","stringify","App","setFollowersData","page","followers_url","data","fetchFollowers","sort","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8adfbe1e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./LandingPage.css\";\nimport \"whatwg-fetch\";\n\nconst LandingPage = ({\n  name,\n  setName,\n  githubObject,\n  setGithubObject,\n  setPage\n}) => {\n  const [input, setInput] = React.useState(\"LaLeonie\");\n\n  const updateInput = event => {\n    setInput(event.target.value);\n  };\n\n  const updateName = event => {\n    event.preventDefault();\n    setName(input);\n  };\n\n  return (\n    <main className=\"LandingPage\">\n      <h1>Welcome to our game!</h1>\n      <form onSubmit={updateName}>\n        <label htmlFor=\"name-input\">\n          Enter your Github name to get started\n          <input\n            id=\"name-input\"\n            type=\"text\"\n            value={input}\n            onChange={updateInput}\n            placeholder=\"Your Name\"\n          />\n        </label>\n        {/* <p>\n          {input},{name}, {JSON.stringify(githubObject)}\n        </p> */}\n        <button>Submit</button>\n      </form>\n      {githubObject && (\n        <div className=\"playerDisplay\">\n          <img src={githubObject.avatar_url} alt=\"ProfilePic\" />\n          <button onClick={() => setPage(\"GamePage\")}>Start Playing</button>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default LandingPage;\n","const fetchPlayer = name => {\n  const URL = `https://api.github.com/users/${name}`;\n  return fetch(URL).then(result => result.json());\n};\n\nexport default fetchPlayer;\n","const fetchPlayer = url => {\n    return fetch(url).then(result => result.json());\n  };\n  \n  export default fetchPlayer;\n  ","import React from \"react\";\nimport \"./ScoreDisplay.css\";\n\nconst ScoreDisplay = ({ score }) => {\n  return (\n    <div>\n      <h2>{score}</h2>\n    </div>\n  );\n};\n\nexport default ScoreDisplay;\n","import React from \"react\";\nimport \"./Player.css\";\n\nconst Player= ({githubObject,coords})=>{\n    return (\n        <div className=\"player\"   style={{transform:\" translate(\"+coords[0]+\"px , \"+coords[1]+\"px)\"}}>\n        <img src={githubObject.avatar_url} alt=\"player\" />\n        {/* {githubObject.login} {coords[0]+\":\"+coords[1]} */}\n        </div>\n    )\n}\nexport default Player","import React from \"react\";\n\nconst Follower = ({ follower }) => {\n  return (\n    <div\n      className={\"follower \"+(follower.dangerous?\"\":\"safe\")}\n      style={{ transform: `translate(${follower.x}px,${follower.y}px)` }}\n    >\n      <img src={follower.img} alt=\"follower\" />\n    </div>\n  );\n};\n\nexport default Follower;\n","const animateFollower = (follower, width, height, mobSize) => {\n  let collision = false;\n  let { x, y, dx, dy, timer, visible, dangerous,...rest } = follower;\n  timer--;\n  if (timer < 0) {\n    visible = true;\n    x += dx;\n    if (x < 0 || x > width - mobSize) {\n      dx = -dx;\n      x += dx * 2;\n    }\n    y += dy;\n    if (y < 0 || y > height - mobSize) {\n      dy = -dy;\n      y += dy * 2;\n    }\n    if (timer < -50) {\n        dangerous=true;\n      if (\n        areCirclesIntersecting(\n          follower,\n          { x: follower.playerCoords[0], y: follower.playerCoords[1] },\n          mobSize\n        )\n      ) {\n        collision = true;\n      }\n    }\n  }\n\n  return [{ ...rest, x, y, dx, dy, timer,dangerous, visible }, collision];\n};\nconst areCirclesIntersecting = (c1, c2, radius) => {\n  // console.log(c2.x);\n  const distance = Math.sqrt(\n    Math.pow(c1.x - c2.x, 2) + Math.pow(c1.y - c2.y, 2)\n  );\n  return distance < radius;\n};\nexport default animateFollower;\n","import React from \"react\";\nimport \"./PlayingField.css\";\nimport Player from \"./Player\";\nimport Follower from \"./Follower\";\nimport animateFollower from \"../utils/animateFollower\";\n\nconst PlayingField = ({\n  githubObject,\n  followersData,\n  score,\n  setScore,\n  setPage,\n  setKiller\n}) => {\n  const [followers, setFollowers] = React.useState([]);\n  const width = 1000;\n  const height = 600;\n  const mobSize = 100;\n  const speed = 5;\n  const [coords, setCoords] = React.useState([width / 2, height / 2]);\n  const randomInt = max => Math.floor(Math.random() * max);\n\n  React.useEffect(() => {\n    let interval = 0;\n    const keyHandler = event => {\n      if (event.key === \"ArrowUp\") {\n        setCoords(c => {\n          const changed=[c[0], Math.min(Math.max(c[1] - speed,0),height-mobSize)];\n          \n          setFollowers(followers =>\n            followers.map(follower => ({ ...follower, playerCoords: changed }))\n          );\n          return changed;\n        });\n      }\n      if (event.key === \"ArrowDown\") {\n        setCoords(c => {\n          const changed=[c[0],  Math.min(Math.max(c[1] + speed,0),height-mobSize)];\n          setFollowers(followers =>\n            followers.map(follower => ({ ...follower, playerCoords: changed }))\n          );\n          return changed;\n        });\n      }\n      if (event.key === \"ArrowLeft\") {\n        setCoords(c => {\n          const changed=[ Math.min(Math.max(c[0] - speed,0),width-mobSize), c[1]];\n          setFollowers(followers =>\n            followers.map(follower => ({ ...follower, playerCoords: changed }))\n          );\n          return changed;\n        });\n      }\n      if (event.key === \"ArrowRight\") {\n        setCoords(c => {\n          const changed=[ Math.min(Math.max(c[0] + speed,0),width-mobSize), c[1]];\n          setFollowers(followers =>\n            followers.map(follower => ({ ...follower, playerCoords: changed }))\n          );\n          return changed;\n        });\n      }\n    };\n    window.addEventListener(\"keydown\", keyHandler);\n    setFollowers(\n      followersData.map((follower,i) => {\n        return {\n          img: follower.avatar_url,\n          name: follower.login,\n          x: randomInt(width - mobSize * 2 + mobSize),\n          y: randomInt(height - mobSize * 2 + mobSize),\n          dx: randomInt(10) - 5,\n          dy: randomInt(10) - 5,\n          visible: false,\n          dangerous:false,\n          timer: i*25,\n          playerCoords: coords\n        };\n      })\n    );\n    interval = setInterval(() => {\n      setScore(score => score + 1);\n      setFollowers( followers => {\n        return followers.map((follower,i) => {\n          const [animatedFollower, collision] = animateFollower(\n            follower,\n            width,\n            height,\n            mobSize,\n          );\n          if (collision) {\n            setKiller(animatedFollower.name);\n            setPage(\"FinalPage\");\n            console.log(\"Collided with \", animatedFollower.name);\n          }\n          return animatedFollower;\n        });\n      });\n    }, 50);\n    return () => {\n      window.removeEventListener(\"keydown\", keyHandler);\n      clearInterval(interval);\n    };\n  }, [followersData, githubObject]);\n\n  return (\n    <div className=\"playing-field\" style={{ width, height }}>\n      <Player githubObject={githubObject} coords={coords} />\n\n      {followers\n        .filter(follower => follower.visible)\n        .map(follower => (\n          <Follower key={follower.name} follower={follower} />\n        ))}\n    </div>\n  );\n};\n\nexport default PlayingField;\n","import React from \"react\";\nimport \"./GamePage.css\";\nimport ScoreDisplay from \"./ScoreDisplay\";\nimport PlayingField from \"./PlayingField\";\n\nconst GamePage = ({\n  githubObject,\n  followersData,\n  score,\n  setScore,\n  setPage,\n  setKiller\n}) => {\n  return (\n    <main className=\"MainPage\">\n      <div>Game Page</div>\n      <ScoreDisplay score={score} />\n      <PlayingField\n        githubObject={githubObject}\n        followersData={followersData}\n        score={score}\n        setScore={setScore}\n        setPage={setPage}\n        setKiller={setKiller}\n      />\n    </main>\n  );\n};\n\nexport default GamePage;\n","import \"./FinalPage.css\";\nimport React from \"react\";\n\nconst FinalPage = ({ score, killer, name, setPage }) => {\n  React.useEffect(()=>{\n      let hs=JSON.parse(localStorage.getItem('hs')||\"[]\");\n      hs.push({name,killer,score});\n      localStorage.setItem('hs',JSON.stringify(hs));\n\n  },[score,killer,name])\n  return (\n    <main>\n      <h1>Game Over {name}</h1>\n      <h2>Your score is: {score} </h2>\n      <p>\n        You were forced to merge with <span className=\"killer\">{killer}</span>\n      </p>\n      <button onClick={() => setPage(\"LandingPage\")}>Play Again</button>\n    </main>\n  );\n};\n\nexport default FinalPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport LandingPage from \"./components/LandingPage\";\nimport fetchPlayer from \"./utils/fetchPlayer\";\nimport fetchFollowers from \"./utils/fetchFollowers\";\nimport GamePage from \"./components/GamePage\";\nimport FinalPage from \"./components/FinalPage\";\n\nfunction App() {\n  const [name, setName] = React.useState(\"\");\n  const [githubObject, setGithubObject] = React.useState(null);\n  const [followersData, setFollowersData] = React.useState(null);\n  const [page, setPage] = React.useState(\"LandingPage\");\n  const [score, setScore] = React.useState(0);\n  const [killer, setKiller] = React.useState(\"\");\n\n  React.useEffect(() => {\n    let followers_url = null;\n    if (name) {\n      fetchPlayer(name)\n        .then(data => {\n          setGithubObject(data);\n          followers_url = data.followers_url;\n        })\n        .then(() =>\n          fetchFollowers(followers_url).then(data => {\n            setFollowersData(data.sort(()=>Math.random()-0.5));\n          })\n        );\n    }\n  }, [name]);\n\n  return (\n    <div className=\"App\">\n      {page === \"LandingPage\" && (\n        <LandingPage\n          name={name}\n          setName={setName}\n          githubObject={githubObject}\n          setGithubObject={setGithubObject}\n          setPage={setPage}\n        />\n      )}\n      {page === \"GamePage\" && (\n        <GamePage\n          setPage={setPage}\n          githubObject={githubObject}\n          followersData={followersData}\n          score={score}\n          setScore={setScore}\n          setKiller={setKiller}\n        />\n      )}\n      {page === \"FinalPage\" && <FinalPage setPage={setPage} score={score} killer={killer} name={name}/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}